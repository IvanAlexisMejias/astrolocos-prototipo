{"ast":null,"code":"import React, { useEffect } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport earthImg from './textures/00_earthmap1k.jpg';\nimport earthBumpImg from './textures/01_earthbump1k.jpg';\nimport earthSpecularImg from './textures/02_earthspec1k.jpg';\nimport earthCloudsImg from './textures/04_earthcloudmap.jpg';\nimport starsImg from './textures/stars/circle.png';\nfunction Earth() {\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n    const geometry = new THREE.SphereGeometry(5, 32, 32);\n    const texture = new THREE.TextureLoader().load(earthImg);\n    const bumpTexture = new THREE.TextureLoader().load(earthBumpImg);\n    const specularTexture = new THREE.TextureLoader().load(earthSpecularImg);\n    const material = new THREE.MeshPhongMaterial({\n      map: texture,\n      bumpMap: bumpTexture,\n      bumpScale: 0.05,\n      specularMap: specularTexture,\n      specular: new THREE.Color('grey')\n    });\n    const earth = new THREE.Mesh(geometry, material);\n    scene.add(earth);\n    const cloudGeometry = new THREE.SphereGeometry(5.05, 32, 32);\n    const cloudTexture = new THREE.TextureLoader().load(earthCloudsImg);\n    const cloudMaterial = new THREE.MeshPhongMaterial({\n      map: cloudTexture,\n      transparent: true\n    });\n    const clouds = new THREE.Mesh(cloudGeometry, cloudMaterial);\n    scene.add(clouds);\n    const starsGeometry = new THREE.SphereGeometry(90, 64, 64);\n    const starsTexture = new THREE.TextureLoader().load(starsImg);\n    const starsMaterial = new THREE.MeshBasicMaterial({\n      map: starsTexture,\n      side: THREE.BackSide\n    });\n    const stars = new THREE.Mesh(starsGeometry, starsMaterial);\n    scene.add(stars);\n    const light = new THREE.DirectionalLight(0xffffff, 1);\n    light.position.set(10, 10, 10).normalize();\n    scene.add(light);\n    const controls = new OrbitControls(camera, renderer.domElement);\n    camera.position.z = 15;\n    function animate() {\n      requestAnimationFrame(animate);\n      earth.rotation.y += 0.001;\n      clouds.rotation.y += 0.001;\n      controls.update();\n      renderer.render(scene, camera);\n    }\n    animate();\n    return () => {\n      document.body.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\nexport default Earth;","map":{"version":3,"names":["React","useEffect","THREE","OrbitControls","earthImg","earthBumpImg","earthSpecularImg","earthCloudsImg","starsImg","Earth","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","geometry","SphereGeometry","texture","TextureLoader","load","bumpTexture","specularTexture","material","MeshPhongMaterial","map","bumpMap","bumpScale","specularMap","specular","Color","earth","Mesh","add","cloudGeometry","cloudTexture","cloudMaterial","transparent","clouds","starsGeometry","starsTexture","starsMaterial","MeshBasicMaterial","side","BackSide","stars","light","DirectionalLight","position","set","normalize","controls","z","animate","requestAnimationFrame","rotation","y","update","render","removeChild","createElement","Fragment"],"sources":["C:/Users/Ivan/Desktop/billy/src/Earth.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport earthImg from './textures/00_earthmap1k.jpg';\r\nimport earthBumpImg from './textures/01_earthbump1k.jpg';\r\nimport earthSpecularImg from './textures/02_earthspec1k.jpg';\r\nimport earthCloudsImg from './textures/04_earthcloudmap.jpg';\r\nimport starsImg from './textures/stars/circle.png';\r\n\r\nfunction Earth() {\r\n    useEffect(() => {\r\n        const scene = new THREE.Scene();\r\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n        const renderer = new THREE.WebGLRenderer();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        document.body.appendChild(renderer.domElement);\r\n\r\n        const geometry = new THREE.SphereGeometry(5, 32, 32);\r\n        const texture = new THREE.TextureLoader().load(earthImg);\r\n        const bumpTexture = new THREE.TextureLoader().load(earthBumpImg);\r\n        const specularTexture = new THREE.TextureLoader().load(earthSpecularImg);\r\n        const material = new THREE.MeshPhongMaterial({\r\n            map: texture,\r\n            bumpMap: bumpTexture,\r\n            bumpScale: 0.05,\r\n            specularMap: specularTexture,\r\n            specular: new THREE.Color('grey'),\r\n        });\r\n\r\n        const earth = new THREE.Mesh(geometry, material);\r\n        scene.add(earth);\r\n\r\n        const cloudGeometry = new THREE.SphereGeometry(5.05, 32, 32);\r\n        const cloudTexture = new THREE.TextureLoader().load(earthCloudsImg);\r\n        const cloudMaterial = new THREE.MeshPhongMaterial({\r\n            map: cloudTexture,\r\n            transparent: true,\r\n        });\r\n\r\n        const clouds = new THREE.Mesh(cloudGeometry, cloudMaterial);\r\n        scene.add(clouds);\r\n\r\n        const starsGeometry = new THREE.SphereGeometry(90, 64, 64);\r\n        const starsTexture = new THREE.TextureLoader().load(starsImg);\r\n        const starsMaterial = new THREE.MeshBasicMaterial({\r\n            map: starsTexture,\r\n            side: THREE.BackSide,\r\n        });\r\n\r\n        const stars = new THREE.Mesh(starsGeometry, starsMaterial);\r\n        scene.add(stars);\r\n\r\n        const light = new THREE.DirectionalLight(0xffffff, 1);\r\n        light.position.set(10, 10, 10).normalize();\r\n        scene.add(light);\r\n\r\n        const controls = new OrbitControls(camera, renderer.domElement);\r\n        camera.position.z = 15;\r\n\r\n        function animate() {\r\n            requestAnimationFrame(animate);\r\n            earth.rotation.y += 0.001;\r\n            clouds.rotation.y += 0.001;\r\n            controls.update();\r\n            renderer.render(scene, camera);\r\n        }\r\n        animate();\r\n\r\n        return () => {\r\n            document.body.removeChild(renderer.domElement);\r\n        };\r\n    }, []);\r\n\r\n    return <></>;\r\n}\r\n\r\nexport default Earth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}