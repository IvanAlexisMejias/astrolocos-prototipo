{"ast":null,"code":"import React, { useEffect } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport earthMap from './textures/00_earthmap1k.jpg';\nimport earthBumpMap from './textures/01_earthbump1k.jpg';\nimport earthSpecularMap from './textures/02_earthspec1k.jpg';\nimport earthLightsMap from './textures/03_earthlights1k.jpg';\nimport earthCloudMap from './textures/04_earthcloudmap.jpg';\nimport earthCloudTransMap from './textures/05_earthcloudmaptrans.jpg';\nimport starsImg from './textures/stars/circle.png';\nfunction Earth() {\n  useEffect(() => {\n    // Escena, cámara y renderizador\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    document.body.appendChild(renderer.domElement);\n\n    // Textura de la Tierra\n    const earthGeometry = new THREE.SphereGeometry(5, 32, 32);\n    const earthMaterial = new THREE.MeshPhongMaterial({\n      map: new THREE.TextureLoader().load(earthMap),\n      bumpMap: new THREE.TextureLoader().load(earthBumpMap),\n      bumpScale: 0.05,\n      specularMap: new THREE.TextureLoader().load(earthSpecularMap),\n      specular: new THREE.Color('grey'),\n      emissiveMap: new THREE.TextureLoader().load(earthLightsMap),\n      emissive: new THREE.Color('white')\n    });\n    const earth = new THREE.Mesh(earthGeometry, earthMaterial);\n    scene.add(earth);\n\n    // Nubes\n    const cloudGeometry = new THREE.SphereGeometry(5.05, 32, 32);\n    const cloudMaterial = new THREE.MeshPhongMaterial({\n      map: new THREE.TextureLoader().load(earthCloudMap),\n      alphaMap: new THREE.TextureLoader().load(earthCloudTransMap),\n      transparent: true,\n      depthWrite: false\n    });\n    const clouds = new THREE.Mesh(cloudGeometry, cloudMaterial);\n    scene.add(clouds);\n\n    // Estrellas de fondo\n    const starsGeometry = new THREE.SphereGeometry(90, 64, 64);\n    const starsMaterial = new THREE.MeshBasicMaterial({\n      map: new THREE.TextureLoader().load(starsImg),\n      side: THREE.BackSide\n    });\n    const stars = new THREE.Mesh(starsGeometry, starsMaterial);\n    scene.add(stars);\n\n    // Iluminación\n    const ambientLight = new THREE.AmbientLight(0x333333);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 3, 5).normalize();\n    scene.add(directionalLight);\n\n    // Controles de órbita\n    const controls = new OrbitControls(camera, renderer.domElement);\n    camera.position.set(0, 0, 15);\n    controls.update();\n\n    // Animación\n    const animate = () => {\n      requestAnimationFrame(animate);\n      earth.rotation.y += 0.001;\n      clouds.rotation.y += 0.001;\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Limpiar\n    return () => {\n      document.body.removeChild(renderer.domElement);\n    };\n  }, []);\n  return null;\n}\nexport default Earth;","map":{"version":3,"names":["React","useEffect","THREE","OrbitControls","earthMap","earthBumpMap","earthSpecularMap","earthLightsMap","earthCloudMap","earthCloudTransMap","starsImg","Earth","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","devicePixelRatio","document","body","appendChild","domElement","earthGeometry","SphereGeometry","earthMaterial","MeshPhongMaterial","map","TextureLoader","load","bumpMap","bumpScale","specularMap","specular","Color","emissiveMap","emissive","earth","Mesh","add","cloudGeometry","cloudMaterial","alphaMap","transparent","depthWrite","clouds","starsGeometry","starsMaterial","MeshBasicMaterial","side","BackSide","stars","ambientLight","AmbientLight","directionalLight","DirectionalLight","position","set","normalize","controls","update","animate","requestAnimationFrame","rotation","y","render","removeChild"],"sources":["C:/Users/Ivan/Desktop/billy/src/Earth.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport earthMap from './textures/00_earthmap1k.jpg';\r\nimport earthBumpMap from './textures/01_earthbump1k.jpg';\r\nimport earthSpecularMap from './textures/02_earthspec1k.jpg';\r\nimport earthLightsMap from './textures/03_earthlights1k.jpg';\r\nimport earthCloudMap from './textures/04_earthcloudmap.jpg';\r\nimport earthCloudTransMap from './textures/05_earthcloudmaptrans.jpg';\r\nimport starsImg from './textures/stars/circle.png';\r\n\r\nfunction Earth() {\r\n    useEffect(() => {\r\n        // Escena, cámara y renderizador\r\n        const scene = new THREE.Scene();\r\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n        const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n        document.body.appendChild(renderer.domElement);\r\n\r\n        // Textura de la Tierra\r\n        const earthGeometry = new THREE.SphereGeometry(5, 32, 32);\r\n        const earthMaterial = new THREE.MeshPhongMaterial({\r\n            map: new THREE.TextureLoader().load(earthMap),\r\n            bumpMap: new THREE.TextureLoader().load(earthBumpMap),\r\n            bumpScale: 0.05,\r\n            specularMap: new THREE.TextureLoader().load(earthSpecularMap),\r\n            specular: new THREE.Color('grey'),\r\n            emissiveMap: new THREE.TextureLoader().load(earthLightsMap),\r\n            emissive: new THREE.Color('white')\r\n        });\r\n\r\n        const earth = new THREE.Mesh(earthGeometry, earthMaterial);\r\n        scene.add(earth);\r\n\r\n        // Nubes\r\n        const cloudGeometry = new THREE.SphereGeometry(5.05, 32, 32);\r\n        const cloudMaterial = new THREE.MeshPhongMaterial({\r\n            map: new THREE.TextureLoader().load(earthCloudMap),\r\n            alphaMap: new THREE.TextureLoader().load(earthCloudTransMap),\r\n            transparent: true,\r\n            depthWrite: false\r\n        });\r\n\r\n        const clouds = new THREE.Mesh(cloudGeometry, cloudMaterial);\r\n        scene.add(clouds);\r\n\r\n        // Estrellas de fondo\r\n        const starsGeometry = new THREE.SphereGeometry(90, 64, 64);\r\n        const starsMaterial = new THREE.MeshBasicMaterial({\r\n            map: new THREE.TextureLoader().load(starsImg),\r\n            side: THREE.BackSide\r\n        });\r\n\r\n        const stars = new THREE.Mesh(starsGeometry, starsMaterial);\r\n        scene.add(stars);\r\n\r\n        // Iluminación\r\n        const ambientLight = new THREE.AmbientLight(0x333333);\r\n        scene.add(ambientLight);\r\n\r\n        const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\r\n        directionalLight.position.set(5, 3, 5).normalize();\r\n        scene.add(directionalLight);\r\n\r\n        // Controles de órbita\r\n        const controls = new OrbitControls(camera, renderer.domElement);\r\n        camera.position.set(0, 0, 15);\r\n        controls.update();\r\n\r\n        // Animación\r\n        const animate = () => {\r\n            requestAnimationFrame(animate);\r\n            earth.rotation.y += 0.001;\r\n            clouds.rotation.y += 0.001;\r\n            controls.update();\r\n            renderer.render(scene, camera);\r\n        };\r\n\r\n        animate();\r\n\r\n        // Limpiar\r\n        return () => {\r\n            document.body.removeChild(renderer.domElement);\r\n        };\r\n    }, []);\r\n\r\n    return null;\r\n}\r\n\r\nexport default Earth;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}